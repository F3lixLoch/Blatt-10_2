name: Automatische Tests

on: 
  push:
    branches:
    - '*'
    - '!badges'

concurrency:
  group: ${{ github.repository }}
  cancel-in-progress: true

jobs:
  build:
    name: Automatische Tests
    runs-on: [self-hosted, linux]
    steps:
      - uses: mickem/clean-after-action@v2
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo

      - name: Prüfe Abgabe mit automatischen Tests
        timeout-minutes: 2
        run: |
          ulimit -v 400000 -m 400000 -t 60; /usr/bin/python3 eval.py | tee tests.log
          exit ${PIPESTATUS[0]}

      - name: Bestimme Punktzahl anhand der Testergebnisse
        id: testpoints
        if: always()
        run: |
          echo "points=0" >> $GITHUB_OUTPUT
          echo "totalpoints=0" >> $GITHUB_OUTPUT
          POINTS="$(cat tests.log | grep --text 'Erreichte Punkte:' | sed -r 's/Erreichte Punkte: ([0-9]+)?.*/\1/' )"
          echo "points=${POINTS}" >> $GITHUB_OUTPUT
          TOTALPOINTS="$(cat tests.log | grep --text 'Gesamtpunkte:' | sed -r 's/Gesamtpunkte: ([0-9]+)?.*/\1/' )"
          echo "totalpoints=${TOTALPOINTS}" >> $GITHUB_OUTPUT
          echo "${POINTS} / ${TOTALPOINTS} Punkte erreicht"
          rm -f tests.log
    
      - name: Erstelle Verzeichnis für Punktzahl-Badge
        if: always()
        run: |
          git checkout badges 2> /dev/null || git checkout -b badges
          mkdir -p .github/badges
        
      - name: Erstelle Punktzahl-Badge
        uses: emibcn/badge-action@v2.0.2
        if: always()
        with:
          LABEL: 'Voraussichtliche Punktzahl'
          STATUS: ${{join(steps.testpoints.outputs.*, ' / ')}}
          COLOR: ${{
                steps.testpoints.outputs.points == 0 && 'red' ||
                steps.testpoints.outputs.points == steps.testpoints.outputs.totalpoints && 'green' ||
                'yellow' }}
          SCALE: 2
          path: '.github/badges/points.svg'

      - name: Übernehme neue Punktzahl-Badge
        id: commitbadge
        if: always()
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add '.github/badges/points.svg'
          git commit -m "Add/Update badge"
        continue-on-error: true

      - name: Lade neue Punktzahl-Badge hoch
        uses: ad-m/github-push-action@master
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: badges
          force: true
